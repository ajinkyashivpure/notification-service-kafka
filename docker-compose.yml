

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.3
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: echo srvr | nc zookeeper 2181 || exit 1
      interval: 10s
      retries: 3
      start_period: 10s
      timeout: 10s
    networks:
      - notification-network

  kafka:
    image: confluentinc/cp-kafka:7.5.3
    hostname: kafka
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: kafka-topics --bootstrap-server kafka:9092 --list || exit 1
      interval: 10s
      retries: 3
      start_period: 10s
      timeout: 10s
    networks:
      - notification-network

  kafka-init:
    image: confluentinc/cp-kafka:7.5.3
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "
      # Create topics
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic email-notifications --partitions 3 --replication-factor 1
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic email-notifications-dlt --partitions 1 --replication-factor 1
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic sms-notifications --partitions 3 --replication-factor 1
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic sms-notifications-dlt --partitions 1 --replication-factor 1
      
      # List all topics
      echo 'Created topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "
    networks:
      - notification-network

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    networks:
      - notification-network

  email-service:
    build:
      context: .  # Use the root directory as build context
      dockerfile: ./email-service/Dockerfile
    container_name: email-service
    ports:
      - "8081:8081"
    env_file:
      - .env
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SERVER_PORT: 8081
      SPRING_PROFILES_ACTIVE: dev
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      # Explicitly disable SMTP auth for MailHog
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: "false"
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: "false"
    depends_on:
      kafka:
        condition: service_healthy
      mailhog:
        condition: service_started
      kafka-init:
        condition: service_completed_successfully
    networks:
      - notification-network

  notification-service:
    build:
      context: .  # Use the root directory as build context
      dockerfile: ./notification-service/Dockerfile
    container_name: notification-service
    ports:
      - "8080:8080"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SERVER_PORT: 8080
    depends_on:
      kafka:
        condition: service_healthy
      kafka-init:
        condition: service_completed_successfully
    networks:
      - notification-network

  sms-service:
    build:
      context: .  # Use the root directory as build context
      dockerfile: ./sms-service/Dockerfile
    container_name: sms-service
    ports:
      - "8082:8082"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SERVER_PORT: 8082
    depends_on:
      kafka:
        condition: service_healthy
      kafka-init:
        condition: service_completed_successfully
    networks:
      - notification-network

networks:
  notification-network:
    driver: bridge