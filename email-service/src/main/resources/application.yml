server:
  port: 8081

spring:
  application:
    name: email-service

  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:29092}
    consumer:
      group-id: email-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: "com.example.email.model"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:your-email@gmail.com}
    password: ${MAIL_PASSWORD:your-app-password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

# Dev profile for local testing with simulated email sending
---
spring:
  config:
    activate:
      on-profile: dev

  mail:
    host: ${MAIL_HOST:localhost}
    port: ${MAIL_PORT:1025}
    username: ''
    password: ''
    properties:
      mail:
        smtp:
          auth: false
          starttls:
            enable: false

# Production profile
---
spring:
  config:
    activate:
      on-profile: prod

logging:
  level:
    com.example.email: INFO
    org.springframework.kafka: INFO