server:
  port: 8082

spring:
  application:
    name: sms-service

  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:29092}
    consumer:
      group-id: sms-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: "com.example.sms.model,com.notification.model"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

# SMS Provider Configuration (simulated)
sms:
  provider:
    api-key: ${SMS_PROVIDER_API_KEY:demo-api-key}
    endpoint: ${SMS_PROVIDER_ENDPOINT:https://api.example.com/sms}
    sender-id: ${SMS_PROVIDER_SENDER_ID:NOTIF-SYS}

logging:
  level:
    com.example.sms: INFO
    org.springframework.kafka: INFO

# Dev profile
---
spring:
  config:
    activate:
      on-profile: dev

# Production profile
---
spring:
  config:
    activate:
      on-profile: prod